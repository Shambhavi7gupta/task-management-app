[{"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\index.js":"1","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\App.js":"2","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\ViewPage.js":"3","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\BoardView.js":"4","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\CalendarView.js":"5","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\ListView.js":"6","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\BoardBox.js":"7","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\Dashboard.js":"8","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\TaskForm.js":"9","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\SearchNav.js":"10","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\Calendar.js":"11","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\TaskListRow.js":"12","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\CalendarTaskRow.js":"13","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\Notification.js":"14","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\CalendarBox.js":"15","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\Login.js":"16","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\config\\firebaseConfig.js":"17","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\Register.js":"18","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\ProtectedRoute.js":"19","C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\PriorityView.js":"20"},{"size":465,"mtime":1716121931752,"results":"21","hashOfConfig":"22"},{"size":1484,"mtime":1716187780248,"results":"23","hashOfConfig":"22"},{"size":1558,"mtime":1716121931752,"results":"24","hashOfConfig":"22"},{"size":1987,"mtime":1716121931732,"results":"25","hashOfConfig":"22"},{"size":1438,"mtime":1716121931747,"results":"26","hashOfConfig":"22"},{"size":4155,"mtime":1716121931747,"results":"27","hashOfConfig":"22"},{"size":4090,"mtime":1716146159612,"results":"28","hashOfConfig":"22"},{"size":3364,"mtime":1716189847128,"results":"29","hashOfConfig":"22"},{"size":7490,"mtime":1716147482714,"results":"30","hashOfConfig":"22"},{"size":1309,"mtime":1716143439914,"results":"31","hashOfConfig":"22"},{"size":3369,"mtime":1716121931732,"results":"32","hashOfConfig":"22"},{"size":9274,"mtime":1716190805568,"results":"33","hashOfConfig":"22"},{"size":1074,"mtime":1716121931747,"results":"34","hashOfConfig":"22"},{"size":1083,"mtime":1716121931747,"results":"35","hashOfConfig":"22"},{"size":3242,"mtime":1716121931747,"results":"36","hashOfConfig":"22"},{"size":1951,"mtime":1716186816702,"results":"37","hashOfConfig":"22"},{"size":853,"mtime":1716138137413,"results":"38","hashOfConfig":"22"},{"size":1988,"mtime":1716186952245,"results":"39","hashOfConfig":"22"},{"size":1677,"mtime":1716140586409,"results":"40","hashOfConfig":"22"},{"size":2984,"mtime":1716190798949,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4c7qgb",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\index.js",[],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\App.js",[],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\ViewPage.js",["104"],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\BoardView.js",[],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\CalendarView.js",["105"],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\ListView.js",["106","107"],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\BoardBox.js",["108","109","110","111","112","113","114"],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\Dashboard.js",["115","116"],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\TaskForm.js",["117"],[],"import \"./TaskForm.css\";\r\nimport { forwardRef, useContext, useRef, useState } from \"react\";\r\nimport Calendar from \"./Calendar\";\r\nimport axios from \"axios\";\r\nimport { NotificationContext } from \"./ViewPage\";\r\nimport Notification from \"./Notification\";\r\n\r\nconst TaskForm = forwardRef(({ reRendertasks }, ref) => {\r\n  const notification = useContext(NotificationContext);\r\n\r\n  const [\r\n    tasknameInput,\r\n    taskCategoryInput,\r\n    HourInput,\r\n    minutesInput,\r\n    descriptionInput,\r\n    pathInput,\r\n    priorityInput,\r\n  ] = [useRef(), useRef(), useRef(), useRef(), useRef(), useRef(), useRef()];\r\n\r\n  const sendData = async () => {\r\n    const task = {\r\n      title: tasknameInput.current.value,\r\n      category: taskCategoryInput.current.value,\r\n      dueDate: date,\r\n      time: HourInput.current.value + \":\" + minutesInput.current.value,\r\n      description: descriptionInput.current.value,\r\n      path:\r\n        pathInput.current.value == \"\"\r\n          ? \"/\"\r\n          : pathInput.current.value.replace(\"C:\\\\fakepath\\\\\", \"uploads/\"),\r\n      priority: priorityInput.current.value, // Include priority here\r\n    };\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"http://localhost:3002/api/tasks/add\",\r\n        task\r\n      );\r\n      if (data.success === true) {\r\n        notification((currentValue) => {\r\n          if (currentValue) {\r\n            return [\r\n              ...currentValue,\r\n              <Notification msg={data.msg} type=\"success\" />,\r\n            ];\r\n          }\r\n          return [<Notification msg={data.msg} type=\"success\" />];\r\n        });\r\n        reRendertasks((re) => (re === true ? false : true));\r\n        const img = document.querySelector('input[type=\"file\"]').files[0];\r\n        if (img) {\r\n          const { data } = await axios.post(\r\n            \"http://localhost:3002/api/tasks/upload\",\r\n            {\r\n              image: img,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n              },\r\n            }\r\n          );\r\n          notification((currentValue) => {\r\n            if (currentValue) {\r\n              return [\r\n                ...currentValue,\r\n                <Notification msg={data} type=\"success\" />,\r\n              ];\r\n            }\r\n            return [<Notification msg={data} type=\"success\" />];\r\n          });\r\n        }\r\n        tasknameInput.current.value = \"\";\r\n        tasknameInput.current.value = \"\";\r\n        HourInput.current.value = \"\";\r\n        minutesInput.current.value = \"\";\r\n        descriptionInput.current.value = \"\";\r\n        pathInput.current.value = \"\";\r\n        priorityInput.current.value = \"Low\";\r\n\r\n        ref.current.style.display = \"none\";\r\n      } else {\r\n        data.msg.forEach((msg, i) => {\r\n          notification((currentValue) => {\r\n            if (currentValue === undefined) {\r\n              return [<Notification key={i} type={\"error\"} msg={msg} />];\r\n            }\r\n            return [\r\n              ...currentValue,\r\n              <Notification key={i} type={\"error\"} msg={msg} />,\r\n            ];\r\n          });\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const [date, setDate] = useState(\"dd-mm-yyyy\");\r\n  return (\r\n    <div\r\n      id=\"form_container\"\r\n      ref={ref}\r\n      onClick={(e) => {\r\n        if (\r\n          e.target.id === ref.current.id ||\r\n          e.target.id === \"close_form\" ||\r\n          e.target.classList[1] === \"fa-xmark\"\r\n        )\r\n          ref.current.style.display = \"none\";\r\n      }}\r\n    >\r\n      <div id=\"form_holder\">\r\n        <div id=\"close_form\">\r\n          <i className=\"fa-solid fa-xmark\"></i>\r\n        </div>\r\n        <div id=\"infos_form_container\">\r\n          <div id=\"calendar_form_container\">\r\n            <Calendar dateState={setDate} />\r\n          </div>\r\n          <div id=\"inputs_form_container\">\r\n            <div className=\"input_con\">\r\n              <span>Task name</span>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"task name\"\r\n                id=\"task_name_input\"\r\n                ref={tasknameInput}\r\n              />\r\n            </div>\r\n            <div className=\"input_con\">\r\n              <span>Category</span>\r\n              <select\r\n                id=\"category_select\"\r\n                className=\"fa\"\r\n                ref={taskCategoryInput}\r\n              >\r\n                <option className=\"fa\" value=\"Food\">\r\n                  {\" \"}\r\n                  &nbsp; Food\r\n                </option>\r\n                <option className=\"fa\" value=\"Map\">\r\n                  &nbsp; Map\r\n                </option>\r\n                <option className=\"fa\" value=\"Meeting\">\r\n                  {\" \"}\r\n                  &nbsp; Meeting\r\n                </option>\r\n                <option className=\"fa\" value=\"Travel\">\r\n                  {\" \"}\r\n                  &nbsp; Travel\r\n                </option>\r\n                <option className=\"fa\" value=\"Games\">\r\n                  {\" \"}\r\n                  &nbsp; Games\r\n                </option>\r\n                <option className=\"fa\" value=\"Sport\">\r\n                  {\" \"}\r\n                  &nbsp; Sport\r\n                </option>\r\n                <option className=\"fa\" value=\"Other\">\r\n                  Other\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div className=\"date_picker\">\r\n              <div id=\"date_displayer\">\r\n                {date}{\" \"}\r\n                <div id=\"calendar_icon_con\">\r\n                  <i className=\"fa-solid fa-calendar-check\"></i>\r\n                </div>\r\n              </div>\r\n              <div id=\"time_input\">\r\n                <input type=\"number\" placeholder=\"H\" ref={HourInput} /> :{\" \"}\r\n                <input type=\"number\" placeholder=\"M\" ref={minutesInput} />\r\n                <div id=\"clock_icon_con\">\r\n                  <i className=\"fa-solid fa-clock\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"input_con desc_con\">\r\n              <span>Description</span>\r\n              <textarea ref={descriptionInput} cols={40} rows={100}></textarea>\r\n            </div>\r\n            <div className=\"input_con\">\r\n              <span>Priority</span>\r\n              <select style={{ color: \"black\" }} ref={priorityInput}>\r\n                <option style={{ color: \"black\" }} value=\"Low\">\r\n                  Low\r\n                </option>\r\n                <option style={{ color: \"black\" }} value=\"Medium\">\r\n                  Medium\r\n                </option>\r\n                <option style={{ color: \"black\" }} value=\"High\">\r\n                  High\r\n                </option>\r\n              </select>\r\n            </div>\r\n            <div className=\"upload_send_container\">\r\n              <input\r\n                type=\"file\"\r\n                multiple\r\n                accept=\"image/*\"\r\n                id=\"file\"\r\n                ref={pathInput}\r\n              />\r\n              <button\r\n                id=\"upload\"\r\n                onClick={() => {\r\n                  document.querySelector(\"#file\").click();\r\n                }}\r\n              >\r\n                Upload <i className=\"fa-solid fa-paperclip\" />\r\n              </button>\r\n              <button id=\"upload\" onClick={sendData}>\r\n                Send <i className=\"fa-regular fa-paper-plane\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\nexport default TaskForm;\r\n",[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\SearchNav.js",["118"],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\Calendar.js",["119","120","121"],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\TaskListRow.js",["122"],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\CalendarTaskRow.js",["123"],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\Notification.js",["124","125","126"],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\CalendarBox.js",["127","128","129","130","131","132"],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\Login.js",[],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\config\\firebaseConfig.js",[],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\Register.js",[],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\ProtectedRoute.js",[],[],"C:\\Users\\shamb\\merntask\\task-management-app\\frontend\\task-manager-app\\src\\component\\PriorityView.js",[],[],{"ruleId":"133","severity":1,"message":"134","line":25,"column":7,"nodeType":"135","endLine":25,"endColumn":13,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":37,"column":11,"nodeType":"135","endLine":37,"endColumn":17,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":14,"column":62,"nodeType":"141","messageId":"142","endLine":14,"endColumn":64},{"ruleId":"139","severity":1,"message":"140","line":29,"column":44,"nodeType":"141","messageId":"142","endLine":29,"endColumn":46},{"ruleId":"143","severity":1,"message":"144","line":8,"column":1,"nodeType":"145","messageId":"142","endLine":21,"endColumn":2},{"ruleId":"139","severity":1,"message":"140","line":27,"column":20,"nodeType":"141","messageId":"142","endLine":27,"endColumn":22},{"ruleId":"139","severity":1,"message":"140","line":35,"column":17,"nodeType":"141","messageId":"142","endLine":35,"endColumn":19},{"ruleId":"133","severity":1,"message":"146","line":111,"column":15,"nodeType":"141","endLine":111,"endColumn":48},{"ruleId":"139","severity":1,"message":"147","line":127,"column":45,"nodeType":"141","messageId":"142","endLine":127,"endColumn":47},{"ruleId":"148","severity":1,"message":"149","line":138,"column":9,"nodeType":"150","endLine":138,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":149,"column":13,"nodeType":"141","messageId":"142","endLine":149,"endColumn":15},{"ruleId":"133","severity":1,"message":"151","line":21,"column":6,"nodeType":"135","endLine":21,"endColumn":13,"suggestions":"152"},{"ruleId":"139","severity":1,"message":"140","line":26,"column":32,"nodeType":"141","messageId":"142","endLine":26,"endColumn":34},{"ruleId":"139","severity":1,"message":"147","line":29,"column":33,"nodeType":"141","messageId":"142","endLine":29,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":6,"column":1,"nodeType":"145","messageId":"142","endLine":11,"endColumn":2},{"ruleId":"139","severity":1,"message":"140","line":30,"column":67,"nodeType":"141","messageId":"142","endLine":30,"endColumn":69},{"ruleId":"133","severity":1,"message":"157","line":73,"column":7,"nodeType":"135","endLine":73,"endColumn":19,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":303,"column":17,"nodeType":"150","endLine":306,"endColumn":19},{"ruleId":"139","severity":1,"message":"147","line":9,"column":47,"nodeType":"141","messageId":"142","endLine":9,"endColumn":49},{"ruleId":"139","severity":1,"message":"147","line":6,"column":28,"nodeType":"141","messageId":"142","endLine":6,"endColumn":30},{"ruleId":"139","severity":1,"message":"147","line":22,"column":48,"nodeType":"141","messageId":"142","endLine":22,"endColumn":50},{"ruleId":"139","severity":1,"message":"147","line":24,"column":44,"nodeType":"141","messageId":"142","endLine":24,"endColumn":46},{"ruleId":"143","severity":1,"message":"144","line":4,"column":1,"nodeType":"145","messageId":"142","endLine":9,"endColumn":2},{"ruleId":"139","severity":1,"message":"140","line":18,"column":46,"nodeType":"141","messageId":"142","endLine":18,"endColumn":48},{"ruleId":"139","severity":1,"message":"140","line":22,"column":38,"nodeType":"141","messageId":"142","endLine":22,"endColumn":40},{"ruleId":"139","severity":1,"message":"140","line":32,"column":52,"nodeType":"141","messageId":"142","endLine":32,"endColumn":54},{"ruleId":"133","severity":1,"message":"161","line":70,"column":7,"nodeType":"135","endLine":70,"endColumn":17,"suggestions":"162"},{"ruleId":"133","severity":1,"message":"163","line":74,"column":7,"nodeType":"135","endLine":74,"endColumn":14,"suggestions":"164"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array. If 'setDashbaord' needs the current value of 'index', you can also switch to useReducer instead of useState and read 'index' in the reducer.","ArrayExpression",["165"],"React Hook useEffect has a missing dependency: 'getTasks'. Either include it or remove the dependency array.",["166"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","Assignments to the 'title' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Expected '===' and instead saw '=='.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'board', 'calendar', 'list', and 'smallAside'. Either include them or remove the dependency array.",["167"],"no-unused-vars","'navigate' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'daysIndex'. Either include it or remove the dependency array. Outer scope values like 'Monthindex' aren't valid dependencies because mutating them doesn't re-render the component.",["168"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'box'. Either include it or remove the dependency array.",["169"],"React Hook useEffect has missing dependencies: 'getDate' and 'textHolder'. Either include them or remove the dependency array.",["170"],{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [index, view]",{"range":"183","text":"184"},"Update the dependencies array to be: [date, getTasks]",{"range":"185","text":"186"},"Update the dependencies array to be: [board, calendar, index, list, smallAside]",{"range":"187","text":"188"},"Update the dependencies array to be: [daysIndex]",{"range":"189","text":"190"},"Update the dependencies array to be: [box, selected]",{"range":"191","text":"192"},"Update the dependencies array to be: [getDate, textHolder, value]",{"range":"193","text":"194"},[946,952],"[index, view]",[1182,1188],"[date, getTasks]",[631,638],"[board, calendar, index, list, smallAside]",[2502,2514],"[daysIndex]",[2869,2879],"[box, selected]",[2974,2981],"[getDate, textHolder, value]"]