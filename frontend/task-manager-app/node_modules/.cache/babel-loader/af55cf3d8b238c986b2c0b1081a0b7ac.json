{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shamb\\\\merntask\\\\task-management-app\\\\frontend\\\\task-manager-app\\\\src\\\\component\\\\BoardBox.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useRef, useEffect, useContext } from \"react\";\nimport \"./BoardBox.css\";\nimport { icons } from \"./TaskListRow\";\nimport { NotificationContext } from \"./ViewPage\";\nimport Notification from \"./Notification\";\nimport { TasksContext } from \"./BoardView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDate.prototype.monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nfunction getDateFormula(dueDate) {\n  let day = \"\";\n  let month = \"\";\n  let year = \"\";\n  for (let i = 0; i < dueDate.length; i++) {\n    if (dueDate[i] != \"/\") {\n      day += dueDate[i];\n    } else {\n      year = dueDate.slice(i + 1, dueDate.length);\n      break;\n    }\n  }\n  for (let i = 0; i < year.length; i++) {\n    if (year[i] != \"/\") {\n      month += year[i];\n    } else {\n      month = Date.prototype.monthNames[Number(month - 1)];\n      year = year.slice(i + 1, dueDate.length);\n      break;\n    }\n  }\n  return [day, month, year];\n}\nexport default function BoardBox(_ref) {\n  _s();\n  let {\n    completed,\n    title,\n    category,\n    dueDate,\n    _id,\n    time,\n    description,\n    path\n  } = _ref;\n  const notification = useContext(NotificationContext);\n  const updateTask = useContext(TasksContext);\n  const [titleref, container] = [useRef(), useRef()];\n  const dragStarted = e => {\n    container.current.classList = `board_box_container closed ${category} dragging`;\n  };\n  const dragEnded = async e => {\n    container.current.classList = `board_box_container closed ${category}`;\n    if (container.current.id) {\n      e.preventDefault();\n      const {\n        data\n      } = await axios.put(`http://localhost:3002/api/tasks/${_id}`, {\n        completed: !completed\n      });\n      if (data.success) {\n        notification(currentValue => {\n          if (currentValue) {\n            return [...currentValue, /*#__PURE__*/_jsxDEV(Notification, {\n              msg: data.msg,\n              type: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)];\n          }\n          return [/*#__PURE__*/_jsxDEV(Notification, {\n            msg: data.msg,\n            type: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this)];\n        });\n        updateTask(currVal => {\n          return !currVal;\n        });\n      }\n    }\n  };\n  const removeTask = async () => {\n    const {\n      data\n    } = await axios.delete(`http://localhost:3002/api/tasks/${_id}`);\n    if (data.success) {\n      notification(currentValue => {\n        if (currentValue) {\n          return [...currentValue, /*#__PURE__*/_jsxDEV(Notification, {\n            msg: data.msg,\n            type: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)];\n        }\n        return [/*#__PURE__*/_jsxDEV(Notification, {\n          msg: data.msg,\n          type: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)];\n      });\n      updateTask(currVal => {\n        return !currVal;\n      });\n    }\n  };\n  useEffect(() => {\n    if (title.length > 34) {\n      title = title.slice(0, 31).trim() + \"...\";\n      titleref.current.textContent = title;\n    } else {\n      titleref.current.textContent = title.trim();\n    }\n  }, [title]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    draggable: \"true\",\n    onDragStart: dragStarted,\n    onDragEnd: dragEnded,\n    className: `board_box_container closed ${category}`,\n    ref: container,\n    onClick: () => {\n      container.current.classList = container.current.classList.value == `board_box_container opened ${category}` ? `board_box_container closed ${category}` : `board_box_container opened ${category}`;\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fa-solid fa-xmark\",\n      onClick: removeTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box_icon_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon_container\",\n        children: icons[category]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box_info_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        ref: titleref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [`${getDateFormula(dueDate)[0]} ${getDateFormula(dueDate)[1]} ${getDateFormula(dueDate)[2]} > `, \" \", time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back_info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), path != \"/\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: path,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 22\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardBox, \"ulJTpapObnwKBJa8rJDvb+2NQVs=\");\n_c = BoardBox;\nvar _c;\n$RefreshReg$(_c, \"BoardBox\");","map":{"version":3,"names":["axios","useRef","useEffect","useContext","icons","NotificationContext","Notification","TasksContext","Date","prototype","monthNames","getDateFormula","dueDate","day","month","year","i","length","slice","Number","BoardBox","completed","title","category","_id","time","description","path","notification","updateTask","titleref","container","dragStarted","e","current","classList","dragEnded","id","preventDefault","data","put","success","currentValue","msg","currVal","removeTask","delete","trim","textContent","value"],"sources":["C:/Users/shamb/merntask/task-management-app/frontend/task-manager-app/src/component/BoardBox.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useRef, useEffect, useContext } from \"react\";\r\nimport \"./BoardBox.css\";\r\nimport { icons } from \"./TaskListRow\";\r\nimport { NotificationContext } from \"./ViewPage\";\r\nimport Notification from \"./Notification\";\r\nimport { TasksContext } from \"./BoardView\";\r\nDate.prototype.monthNames = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\nfunction getDateFormula(dueDate) {\r\n  let day = \"\";\r\n  let month = \"\";\r\n  let year = \"\";\r\n  for (let i = 0; i < dueDate.length; i++) {\r\n    if (dueDate[i] != \"/\") {\r\n      day += dueDate[i];\r\n    } else {\r\n      year = dueDate.slice(i + 1, dueDate.length);\r\n      break;\r\n    }\r\n  }\r\n  for (let i = 0; i < year.length; i++) {\r\n    if (year[i] != \"/\") {\r\n      month += year[i];\r\n    } else {\r\n      month = Date.prototype.monthNames[Number(month - 1)];\r\n      year = year.slice(i + 1, dueDate.length);\r\n      break;\r\n    }\r\n  }\r\n  return [day, month, year];\r\n}\r\nexport default function BoardBox({\r\n  completed,\r\n  title,\r\n  category,\r\n  dueDate,\r\n  _id,\r\n  time,\r\n  description,\r\n  path,\r\n}) {\r\n  const notification = useContext(NotificationContext);\r\n  const updateTask = useContext(TasksContext);\r\n\r\n  const [titleref, container] = [useRef(), useRef()];\r\n  const dragStarted = (e) => {\r\n    container.current.classList = `board_box_container closed ${category} dragging`;\r\n  };\r\n  const dragEnded = async (e) => {\r\n    container.current.classList = `board_box_container closed ${category}`;\r\n    if (container.current.id) {\r\n      e.preventDefault();\r\n      const { data } = await axios.put(\r\n        `http://localhost:3002/api/tasks/${_id}`,\r\n        {\r\n          completed: !completed,\r\n        }\r\n      );\r\n      if (data.success) {\r\n        notification((currentValue) => {\r\n          if (currentValue) {\r\n            return [\r\n              ...currentValue,\r\n              <Notification msg={data.msg} type=\"success\" />,\r\n            ];\r\n          }\r\n          return [<Notification msg={data.msg} type=\"success\" />];\r\n        });\r\n\r\n        updateTask((currVal) => {\r\n          return !currVal;\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const removeTask = async () => {\r\n    const { data } = await axios.delete(\r\n      `http://localhost:3002/api/tasks/${_id}`\r\n    );\r\n    if (data.success) {\r\n      notification((currentValue) => {\r\n        if (currentValue) {\r\n          return [\r\n            ...currentValue,\r\n            <Notification msg={data.msg} type=\"success\" />,\r\n          ];\r\n        }\r\n        return [<Notification msg={data.msg} type=\"success\" />];\r\n      });\r\n\r\n      updateTask((currVal) => {\r\n        return !currVal;\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (title.length > 34) {\r\n      title = title.slice(0, 31).trim() + \"...\";\r\n      titleref.current.textContent = title;\r\n    } else {\r\n      titleref.current.textContent = title.trim();\r\n    }\r\n  }, [title]);\r\n\r\n  return (\r\n    <div\r\n      draggable=\"true\"\r\n      onDragStart={dragStarted}\r\n      onDragEnd={dragEnded}\r\n      className={`board_box_container closed ${category}`}\r\n      ref={container}\r\n      onClick={() => {\r\n        container.current.classList =\r\n          container.current.classList.value ==\r\n          `board_box_container opened ${category}`\r\n            ? `board_box_container closed ${category}`\r\n            : `board_box_container opened ${category}`;\r\n      }}\r\n    >\r\n      <i className=\"fa-solid fa-xmark\" onClick={removeTask}></i>\r\n      <div className=\"box_icon_container\">\r\n        <div className=\"icon_container\">{icons[category]}</div>\r\n      </div>\r\n      <div className=\"box_info_container\">\r\n        <h4 ref={titleref}></h4>\r\n        <h6>\r\n          {`${getDateFormula(dueDate)[0]} ${getDateFormula(dueDate)[1]} ${\r\n            getDateFormula(dueDate)[2]\r\n          } > `}{\" \"}\r\n          {time}\r\n        </h6>\r\n      </div>\r\n      <div className=\"back_info\">\r\n        <p>{description}</p>\r\n      </div>\r\n      {path != \"/\" ? <img src={path} alt=\"\" /> : \"\"}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}