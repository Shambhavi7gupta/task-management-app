{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shamb\\\\merntask\\\\task-management-app\\\\frontend\\\\task-manager-app\\\\src\\\\component\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./Login.module.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [user, setUser] = useState({});\n  const navigate = useNavigate();\n  const auth = getAuth(); // Initialize Firebase authentication\n\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const validatePassword = password => {\n    const minLength = 8;\n    const uppercaseRegex = /[A-Z]/;\n    const numericRegex = /\\d/;\n    const specialCharRegex = /[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\|]/;\n    return password.length >= minLength && uppercaseRegex.test(password) && numericRegex.test(password) && specialCharRegex.test(password);\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    setEmailError(\"\");\n    setPasswordError(\"\");\n    let isValid = true;\n    if (!email) {\n      alert(\"Please enter your email.\");\n      isValid = false;\n    } else if (!validateEmail(email)) {\n      alert(\"Please enter a valid email address.\");\n      isValid = false;\n    }\n    if (!password) {\n      alert(\"Please enter your password.\");\n      isValid = false;\n    } else if (!validatePassword(password)) {\n      alert(\"Password must be at least 8 characters and contain at least one uppercase letter, one number, and one special character.\");\n      isValid = false;\n    }\n    if (isValid) {\n      try {\n        // Sign in user with email and password\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\n        const user = userCredential.user;\n        alert(\"Login Successfull\");\n        navigate(\"/page\");\n        console.log(\"User logged in:\", user);\n        // You can redirect or perform other actions upon successful login\n      } catch (error) {\n        console.error(\"Error signing in:\", error.message);\n        // Handle authentication errors (e.g., display error message to user)\n        alert(\"Invalid email or password. Please try again.\");\n      }\n    }\n  };\n  useEffect(() => {\n    const initializeGoogleSignIn = () => {\n      // Wait for google object to become available\n      const checkGoogleInterval = setInterval(() => {\n        if (window.google && window.google.accounts) {\n          clearInterval(checkGoogleInterval);\n          initializeGoogle();\n        }\n      }, 100);\n    };\n    const initializeGoogle = () => {\n      // Initialize Google Sign-In with custom button\n      const customButton = document.getElementById(\"customSignInButton\");\n      if (customButton) {\n        customButton.addEventListener(\"click\", () => {\n          window.google.accounts.id.prompt();\n        });\n        window.google.accounts.id.initialize({\n          client_id: \"483808031047-nsuuol0b07asnqocbdt5clacqp3j8fhu.apps.googleusercontent.com\",\n          callback: handleCallbackResponse\n        });\n      }\n    };\n    initializeGoogleSignIn();\n  }, []);\n  const handleCallbackResponse = response => {\n    console.log(\"Encoded JWT ID token \" + response.credential);\n    var userObject = jwtDecode(response.credential);\n    console.log(userObject);\n    setUser(userObject);\n    alert(\"Login Successful\");\n    navigate(\"/page\", {\n      state: {\n        user: userObject\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, this);\n};\n_s(Login, \"uBzOiAFsjz4MRxgxe87dK/KN7Vg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","styles","Link","useNavigate","getAuth","signInWithEmailAndPassword","jwtDecode","Login","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","user","setUser","navigate","auth","validateEmail","emailRegex","test","validatePassword","minLength","uppercaseRegex","numericRegex","specialCharRegex","length","handleLogin","e","preventDefault","isValid","alert","userCredential","console","log","error","message","initializeGoogleSignIn","checkGoogleInterval","setInterval","window","google","accounts","clearInterval","initializeGoogle","customButton","document","getElementById","addEventListener","id","prompt","initialize","client_id","callback","handleCallbackResponse","response","credential","userObject","state"],"sources":["C:/Users/shamb/merntask/task-management-app/frontend/task-manager-app/src/component/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./Login.module.css\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [user, setUser] = useState({});\r\n\r\n  const navigate = useNavigate();\r\n  const auth = getAuth(); // Initialize Firebase authentication\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const minLength = 8;\r\n    const uppercaseRegex = /[A-Z]/;\r\n    const numericRegex = /\\d/;\r\n    const specialCharRegex = /[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\|]/;\r\n\r\n    return (\r\n      password.length >= minLength &&\r\n      uppercaseRegex.test(password) &&\r\n      numericRegex.test(password) &&\r\n      specialCharRegex.test(password)\r\n    );\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setEmailError(\"\");\r\n    setPasswordError(\"\");\r\n\r\n    let isValid = true;\r\n\r\n    if (!email) {\r\n      alert(\"Please enter your email.\");\r\n      isValid = false;\r\n    } else if (!validateEmail(email)) {\r\n      alert(\"Please enter a valid email address.\");\r\n      isValid = false;\r\n    }\r\n\r\n    if (!password) {\r\n      alert(\"Please enter your password.\");\r\n      isValid = false;\r\n    } else if (!validatePassword(password)) {\r\n      alert(\r\n        \"Password must be at least 8 characters and contain at least one uppercase letter, one number, and one special character.\"\r\n      );\r\n      isValid = false;\r\n    }\r\n\r\n    if (isValid) {\r\n      try {\r\n        // Sign in user with email and password\r\n        const userCredential = await signInWithEmailAndPassword(\r\n          auth,\r\n          email,\r\n          password\r\n        );\r\n        const user = userCredential.user;\r\n        alert(\"Login Successfull\");\r\n        navigate(\"/page\");\r\n        console.log(\"User logged in:\", user);\r\n        // You can redirect or perform other actions upon successful login\r\n      } catch (error) {\r\n        console.error(\"Error signing in:\", error.message);\r\n        // Handle authentication errors (e.g., display error message to user)\r\n        alert(\"Invalid email or password. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initializeGoogleSignIn = () => {\r\n      // Wait for google object to become available\r\n      const checkGoogleInterval = setInterval(() => {\r\n        if (window.google && window.google.accounts) {\r\n          clearInterval(checkGoogleInterval);\r\n          initializeGoogle();\r\n        }\r\n      }, 100);\r\n    };\r\n    const initializeGoogle = () => {\r\n      // Initialize Google Sign-In with custom button\r\n      const customButton = document.getElementById(\"customSignInButton\");\r\n\r\n      if (customButton) {\r\n        customButton.addEventListener(\"click\", () => {\r\n          window.google.accounts.id.prompt();\r\n        });\r\n\r\n        window.google.accounts.id.initialize({\r\n          client_id:\r\n            \"483808031047-nsuuol0b07asnqocbdt5clacqp3j8fhu.apps.googleusercontent.com\",\r\n          callback: handleCallbackResponse,\r\n        });\r\n      }\r\n    };\r\n\r\n    initializeGoogleSignIn();\r\n  }, []);\r\n\r\n  const handleCallbackResponse = (response) => {\r\n    console.log(\"Encoded JWT ID token \" + response.credential);\r\n    var userObject = jwtDecode(response.credential);\r\n    console.log(userObject);\r\n    setUser(userObject);\r\n    alert(\"Login Successful\");\r\n    navigate(\"/page\", { state: { user: userObject } });\r\n  };\r\n\r\n  return <h1>Login</h1>;\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,oBAAoB;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,OAAO,EAAEC,0BAA0B,QAAQ,eAAe;AACnE,SAASC,SAAS,QAAQ,YAAY;AAAC;AAEvC,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMmB,QAAQ,GAAGf,WAAW,EAAE;EAC9B,MAAMgB,IAAI,GAAGf,OAAO,EAAE,CAAC,CAAC;;EAExB,MAAMgB,aAAa,GAAIZ,KAAK,IAAK;IAC/B,MAAMa,UAAU,GAAG,4BAA4B;IAC/C,OAAOA,UAAU,CAACC,IAAI,CAACd,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMe,gBAAgB,GAAIb,QAAQ,IAAK;IACrC,MAAMc,SAAS,GAAG,CAAC;IACnB,MAAMC,cAAc,GAAG,OAAO;IAC9B,MAAMC,YAAY,GAAG,IAAI;IACzB,MAAMC,gBAAgB,GAAG,iCAAiC;IAE1D,OACEjB,QAAQ,CAACkB,MAAM,IAAIJ,SAAS,IAC5BC,cAAc,CAACH,IAAI,CAACZ,QAAQ,CAAC,IAC7BgB,YAAY,CAACJ,IAAI,CAACZ,QAAQ,CAAC,IAC3BiB,gBAAgB,CAACL,IAAI,CAACZ,QAAQ,CAAC;EAEnC,CAAC;EAED,MAAMmB,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,EAAE;IAClBlB,aAAa,CAAC,EAAE,CAAC;IACjBE,gBAAgB,CAAC,EAAE,CAAC;IAEpB,IAAIiB,OAAO,GAAG,IAAI;IAElB,IAAI,CAACxB,KAAK,EAAE;MACVyB,KAAK,CAAC,0BAA0B,CAAC;MACjCD,OAAO,GAAG,KAAK;IACjB,CAAC,MAAM,IAAI,CAACZ,aAAa,CAACZ,KAAK,CAAC,EAAE;MAChCyB,KAAK,CAAC,qCAAqC,CAAC;MAC5CD,OAAO,GAAG,KAAK;IACjB;IAEA,IAAI,CAACtB,QAAQ,EAAE;MACbuB,KAAK,CAAC,6BAA6B,CAAC;MACpCD,OAAO,GAAG,KAAK;IACjB,CAAC,MAAM,IAAI,CAACT,gBAAgB,CAACb,QAAQ,CAAC,EAAE;MACtCuB,KAAK,CACH,0HAA0H,CAC3H;MACDD,OAAO,GAAG,KAAK;IACjB;IAEA,IAAIA,OAAO,EAAE;MACX,IAAI;QACF;QACA,MAAME,cAAc,GAAG,MAAM7B,0BAA0B,CACrDc,IAAI,EACJX,KAAK,EACLE,QAAQ,CACT;QACD,MAAMM,IAAI,GAAGkB,cAAc,CAAClB,IAAI;QAChCiB,KAAK,CAAC,mBAAmB,CAAC;QAC1Bf,QAAQ,CAAC,OAAO,CAAC;QACjBiB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEpB,IAAI,CAAC;QACpC;MACF,CAAC,CAAC,OAAOqB,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACC,OAAO,CAAC;QACjD;QACAL,KAAK,CAAC,8CAA8C,CAAC;MACvD;IACF;EACF,CAAC;EAEDjC,SAAS,CAAC,MAAM;IACd,MAAMuC,sBAAsB,GAAG,MAAM;MACnC;MACA,MAAMC,mBAAmB,GAAGC,WAAW,CAAC,MAAM;QAC5C,IAAIC,MAAM,CAACC,MAAM,IAAID,MAAM,CAACC,MAAM,CAACC,QAAQ,EAAE;UAC3CC,aAAa,CAACL,mBAAmB,CAAC;UAClCM,gBAAgB,EAAE;QACpB;MACF,CAAC,EAAE,GAAG,CAAC;IACT,CAAC;IACD,MAAMA,gBAAgB,GAAG,MAAM;MAC7B;MACA,MAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;MAElE,IAAIF,YAAY,EAAE;QAChBA,YAAY,CAACG,gBAAgB,CAAC,OAAO,EAAE,MAAM;UAC3CR,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACO,EAAE,CAACC,MAAM,EAAE;QACpC,CAAC,CAAC;QAEFV,MAAM,CAACC,MAAM,CAACC,QAAQ,CAACO,EAAE,CAACE,UAAU,CAAC;UACnCC,SAAS,EACP,0EAA0E;UAC5EC,QAAQ,EAAEC;QACZ,CAAC,CAAC;MACJ;IACF,CAAC;IAEDjB,sBAAsB,EAAE;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,sBAAsB,GAAIC,QAAQ,IAAK;IAC3CtB,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGqB,QAAQ,CAACC,UAAU,CAAC;IAC1D,IAAIC,UAAU,GAAGrD,SAAS,CAACmD,QAAQ,CAACC,UAAU,CAAC;IAC/CvB,OAAO,CAACC,GAAG,CAACuB,UAAU,CAAC;IACvB1C,OAAO,CAAC0C,UAAU,CAAC;IACnB1B,KAAK,CAAC,kBAAkB,CAAC;IACzBf,QAAQ,CAAC,OAAO,EAAE;MAAE0C,KAAK,EAAE;QAAE5C,IAAI,EAAE2C;MAAW;IAAE,CAAC,CAAC;EACpD,CAAC;EAED,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAc;AACvB,CAAC;AAAC,GAnHIpD,KAAK;EAAA,QAOQJ,WAAW;AAAA;AAAA,KAPxBI,KAAK;AAqHX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}