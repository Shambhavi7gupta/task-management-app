{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shamb\\\\merntask\\\\task-management-app\\\\frontend\\\\task-manager-app\\\\src\\\\component\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport { forwardRef, useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { TasksContext } from \"./ListView\";\nimport { NotificationContext } from \"./ViewPage\";\nimport Notification from \"./Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n  let {\n    reRendertasks,\n    initialTask,\n    onSave\n  } = _ref;\n  const [task, setTask] = useState({\n    title: \"\",\n    category: \"\",\n    dueDate: \"\",\n    time: \"\",\n    description: \"\",\n    path: \"\",\n    priority: \"\",\n    ...initialTask // Spread the initial task details if provided\n  });\n\n  const notification = useContext(NotificationContext);\n  const updateTask = useContext(TasksContext);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTask(prevTask => ({\n      ...prevTask,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (initialTask) {\n      // Editing an existing task\n      const {\n        data\n      } = await axios.put(`http://localhost:3002/api/tasks/${initialTask._id}`, task);\n      if (data.success) {\n        notification(currentValue => [...currentValue, /*#__PURE__*/_jsxDEV(Notification, {\n          msg: data.msg,\n          type: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]);\n        onSave();\n      }\n    } else {\n      // Creating a new task\n      const {\n        data\n      } = await axios.post(\"http://localhost:3002/api/tasks\", task);\n      if (data.success) {\n        notification(currentValue => [...currentValue, /*#__PURE__*/_jsxDEV(Notification, {\n          msg: data.msg,\n          type: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]);\n        reRendertasks(currVal => !currVal);\n      }\n    }\n    ref.current.style.display = \"none\"; // Hide form after submission\n  };\n\n  useEffect(() => {\n    if (initialTask) {\n      setTask(initialTask);\n    }\n  }, [initialTask]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task_form_container\",\n    ref: ref,\n    style: {\n      display: \"none\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: task.title,\n        onChange: handleChange,\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        value: task.category,\n        onChange: handleChange,\n        placeholder: \"Category\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"dueDate\",\n        value: task.dueDate,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"time\",\n        value: task.time,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: task.description,\n        onChange: handleChange,\n        placeholder: \"Description\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"path\",\n        value: task.path,\n        onChange: handleChange,\n        placeholder: \"Image Path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"priority\",\n        value: task.priority,\n        onChange: handleChange,\n        placeholder: \"Priority\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}, \"IFafH/b5UwGcjz2Qr/Dobk1/vYg=\")), \"IFafH/b5UwGcjz2Qr/Dobk1/vYg=\");\n_c2 = TaskForm;\nexport default TaskForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskForm$forwardRef\");\n$RefreshReg$(_c2, \"TaskForm\");","map":{"version":3,"names":["forwardRef","useState","useEffect","useContext","axios","TasksContext","NotificationContext","Notification","TaskForm","ref","reRendertasks","initialTask","onSave","task","setTask","title","category","dueDate","time","description","path","priority","notification","updateTask","handleChange","e","name","value","target","prevTask","handleSubmit","preventDefault","data","put","_id","success","currentValue","msg","post","currVal","current","style","display"],"sources":["C:/Users/shamb/merntask/task-management-app/frontend/task-manager-app/src/component/TaskForm.js"],"sourcesContent":["import { forwardRef, useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { TasksContext } from \"./ListView\";\r\nimport { NotificationContext } from \"./ViewPage\";\r\nimport Notification from \"./Notification\";\r\n\r\nconst TaskForm = forwardRef(({ reRendertasks, initialTask, onSave }, ref) => {\r\n  const [task, setTask] = useState({\r\n    title: \"\",\r\n    category: \"\",\r\n    dueDate: \"\",\r\n    time: \"\",\r\n    description: \"\",\r\n    path: \"\",\r\n    priority: \"\",\r\n    ...initialTask, // Spread the initial task details if provided\r\n  });\r\n\r\n  const notification = useContext(NotificationContext);\r\n  const updateTask = useContext(TasksContext);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTask((prevTask) => ({ ...prevTask, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (initialTask) {\r\n      // Editing an existing task\r\n      const { data } = await axios.put(\r\n        `http://localhost:3002/api/tasks/${initialTask._id}`,\r\n        task\r\n      );\r\n      if (data.success) {\r\n        notification((currentValue) => [\r\n          ...currentValue,\r\n          <Notification msg={data.msg} type=\"success\" />,\r\n        ]);\r\n        onSave();\r\n      }\r\n    } else {\r\n      // Creating a new task\r\n      const { data } = await axios.post(\r\n        \"http://localhost:3002/api/tasks\",\r\n        task\r\n      );\r\n      if (data.success) {\r\n        notification((currentValue) => [\r\n          ...currentValue,\r\n          <Notification msg={data.msg} type=\"success\" />,\r\n        ]);\r\n        reRendertasks((currVal) => !currVal);\r\n      }\r\n    }\r\n    ref.current.style.display = \"none\"; // Hide form after submission\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (initialTask) {\r\n      setTask(initialTask);\r\n    }\r\n  }, [initialTask]);\r\n\r\n  return (\r\n    <div className=\"task_form_container\" ref={ref} style={{ display: \"none\" }}>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={task.title}\r\n          onChange={handleChange}\r\n          placeholder=\"Title\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"category\"\r\n          value={task.category}\r\n          onChange={handleChange}\r\n          placeholder=\"Category\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"dueDate\"\r\n          value={task.dueDate}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"time\"\r\n          name=\"time\"\r\n          value={task.time}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          value={task.description}\r\n          onChange={handleChange}\r\n          placeholder=\"Description\"\r\n          required\r\n        ></textarea>\r\n        <input\r\n          type=\"text\"\r\n          name=\"path\"\r\n          value={task.path}\r\n          onChange={handleChange}\r\n          placeholder=\"Image Path\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"priority\"\r\n          value={task.priority}\r\n          onChange={handleChange}\r\n          placeholder=\"Priority\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}